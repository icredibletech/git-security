name: 'iCredible Git Security'
author: 'iCredible'
description: 'Secure repository backup and restoration with encryption'
branding:
  icon: 'shield'
  color: 'blue'

inputs:
  icredible_activation_code:
    description: 'Your unique activation code for the iCredible service. This is required to authenticate and authorize the action to perform backup and restore operations.'
    required: true
  encryption_password:
    description: 'The secret password used to encrypt the repository backup and decrypt it during restoration. Must be at least 32 characters long for strong AES-256 encryption.'
    required: true
  file_version_id:
    description: 'The unique identifier of the backup version you wish to restore. Providing a value for this input triggers the restore workflow. Leave this empty to perform a backup.'
    required: false
    default: ''
  repository_restoration_token:
    description: "A GitHub Personal Access Token (PAT) with 'repo' and 'workflow' scopes. This is required only for the restore operation to push the restored repository and its history."
    required: false
    default: ''
  otp_delivery_method:
    description: "(IN DEVELOPMENT) Specifies the delivery method for the One-Time Password (OTP) required to authorize a restore operation. Valid options are 'MAIL' or 'AUTHENTICATOR'."
    required: false
    default: 'MAIL'

runs:
  using: 'composite'
  steps:

    - name: Set Script Execution Permissions
      shell: bash
      run: chmod -R +x ${{ github.action_path }}/scripts

    - name: Validate Action Parameters
      shell: bash
      run: ${{ github.action_path }}/scripts/common/validate_inputs.sh
      env:
        OTP_DELIVERY_METHOD: ${{ inputs.otp_delivery_method }}

    - name: Initialize Environment Variables
      shell: bash
      run: ${{ github.action_path }}/scripts/common/set_globals.sh

    - name: Verify Encryption Password Strength
      shell: bash
      run: ${{ github.action_path }}/scripts/common/validate_password.sh
      env:
        ENCRYPTION_PASSWORD: ${{ inputs.encryption_password }}

    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: ${{ github.ref }}

    - name: Create Repository Mirror
      if: ${{ inputs.file_version_id == '' }}
      shell: bash
      run: ${{ github.action_path }}/scripts/shield/mirror_clone.sh
      
    - name: Install System Dependencies
      if: ${{ inputs.file_version_id == '' }}
      shell: bash
      run: ${{ github.action_path }}/scripts/shield/install_deps.sh

    - name: Compress Repository Data
      if: ${{ inputs.file_version_id == '' }}
      shell: bash
      run: ${{ github.action_path }}/scripts/shield/compress_repo.sh
      
    - name: Encrypt Backup Archive
      if: ${{ inputs.file_version_id == '' }}
      shell: bash
      run: ${{ github.action_path }}/scripts/shield/encrypt_repo.sh
      env:
        ENCRYPTION_PASSWORD: ${{ inputs.encryption_password }}
        
    - name: Retrieve Activation Token
      shell: bash
      run: ${{ github.action_path }}/scripts/common/get_token.sh
      env:
        ICREDIBLE_ACTIVATION_CODE: ${{ inputs.icredible_activation_code }}
        RUNNER_OS: ${{ runner.os }}

    - name: Transfer Backup Archive
      if: ${{ inputs.file_version_id == '' }}
      shell: bash
      run: ${{ github.action_path }}/scripts/shield/upload_backup.sh

    - name: Display Backup Report
      if: ${{ inputs.file_version_id == '' }}
      shell: bash
      run: ${{ github.action_path }}/scripts/shield/print_summary.sh

    - name: Request OTP
      if: ${{ inputs.file_version_id != '' }}
      shell: bash
      run: ${{ github.action_path }}/scripts/restore/request_otp.sh
      env:
        OTP_DELIVERY_METHOD: ${{ inputs.otp_delivery_method }}

    - name: Authenticate OTP Code
      if: ${{ inputs.file_version_id != '' }}
      shell: bash
      run: ${{ github.action_path }}/scripts/restore/verify_otp.sh

    - name: Fetch Backup Archive
      if: ${{ inputs.file_version_id != '' }}
      shell: bash
      run: ${{ github.action_path }}/scripts/restore/retrieve_backup.sh
      env:
        FILE_VERSION_ID: ${{ inputs.file_version_id }}

    - name: Decrypt Backup Archive
      if: ${{ inputs.file_version_id != '' }}
      shell: bash
      run: ${{ github.action_path }}/scripts/restore/decrypt_backup.sh
      env:
        ENCRYPTION_PASSWORD: ${{ inputs.encryption_password }}
        
    - name: Restore Repository Data
      if: ${{ inputs.file_version_id != '' }}
      shell: bash
      run: ${{ github.action_path }}/scripts/restore/extract_backup.sh

    - name: Configure Git and Push
      if: ${{ inputs.file_version_id != '' }}
      shell: bash
      run: ${{ github.action_path }}/scripts/restore/configure_push.sh
      env:
        REPOSITORY_RESTORATION_TOKEN: ${{ inputs.repository_restoration_token }}
        GITHUB_DEFAULT_TOKEN: ${{ github.token }}